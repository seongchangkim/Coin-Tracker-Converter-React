{"version":3,"sources":["App.js","index.js"],"names":["App","useState","loading","setLoading","coin","setCoin","coinKindList","setCoinKindList","selectCoinKind","setSelectCoinKind","inputNum","setInputNum","inverted","setInverted","count","setCount","id","data","x","y","series","setSeries","onInputNum","event","target","value","getCoin","a","fetch","json","i","length","map","console","log","candleDateTime","slice","tradePrice","alert","getCoinKindList","useEffect","setTimeout","className","onChange","document","querySelector","kind","index","market","korean_name","parseInt","change","changeRate","toFixed","changePrice","margin","top","right","bottom","left","xScale","type","reverse","yScale","min","max","stacked","yFormat","axisTop","axisRight","axisBottom","orient","tickSize","tickValues","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","pointLabelYOffset","useMesh","htmlFor","Math","round","undefined","disabled","onClick","current","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d861cae7.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport { ResponsiveLine } from '@nivo/line';\r\n\r\nfunction App() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [coin, setCoin] = useState([]);\r\n  const [coinKindList, setCoinKindList] = useState([]);\r\n  const [selectCoinKind, setSelectCoinKind] = useState('KRW-BTC');\r\n  const [inputNum, setInputNum] = useState(0);\r\n  const [inverted, setInverted] = useState(false);\r\n  const [count, setCount] = useState(7);\r\n  const [series, setSeries] = useState([{\r\n    id:'',\r\n    data: [\r\n      {\r\n        x: '',\r\n        y: 0\r\n      }\r\n    ]\r\n  }]);\r\n\r\n  const onChange = () => {\r\n    setSelectCoinKind(document.querySelector('#selectCoinKind').value);  \r\n  };\r\n\r\n  const onInputNum = (event) => {\r\n    setInputNum(event.target.value);\r\n  };\r\n\r\n  const onInverted = () => {\r\n    setInputNum(0);\r\n    setInverted((current) => !current);\r\n  };\r\n\r\n  const onCount = () => {\r\n    setCount(parseInt(document.querySelector('#count').value));\r\n  };\r\n\r\n  const getCoin = async() => {\r\n    try{\r\n      const json = await (await fetch(`https://crix-api-endpoint.upbit.com/v1/crix/candles/days/?code=CRIX.UPBIT.${selectCoinKind}&count=${count}`)).json();\r\n    \r\n      const data = [];\r\n\r\n      for(let i = 0; i<json.length; i++){\r\n        data[json.length-1-i] = json[i];\r\n      }\r\n      \r\n      setCoin(data);\r\n      setSeries(() => [{\r\n        id : selectCoinKind,\r\n        data : data.map((coin) => {\r\n          console.log(coin);\r\n              return {\r\n                x: coin.candleDateTime.slice(0,10),\r\n                y: coin.tradePrice\r\n              };\r\n        })\r\n      }]);\r\n\r\n      console.log(series);\r\n    }catch(e){\r\n      alert(e);\r\n    }\r\n  };\r\n\r\n  const getCoinKindList = async() => {\r\n    try{\r\n      const json = await (await fetch(`https://api.upbit.com/v1/market/all`)).json();\r\n\r\n      setCoinKindList(json);\r\n      setLoading(false);\r\n    }catch(e){\r\n      alert(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      getCoinKindList();\r\n      getCoin();\r\n    },1000);\r\n    \r\n    console.log(series);\r\n  }, [selectCoinKind, count]);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        loading ? \r\n        <div id=\"loading\">\r\n          <h1>Loading... Please Wait</h1>\r\n        </div> : \r\n        <div id=\"page\">\r\n          <div className=\"top\">\r\n            <div>\r\n              <select id=\"selectCoinKind\" onChange={onChange}>\r\n                  {coinKindList.map((kind, index) => <option key={index} value={kind.market}>{kind.korean_name}({kind.market})</option>)}\r\n              </select> \r\n            </div>\r\n\r\n            <div>\r\n              <select id=\"count\" onChange={onCount}>\r\n                <option value=\"7\">1주일</option>\r\n                <option value=\"30\">30일</option>\r\n              </select> \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"middle\">\r\n            <div className=\"graph\">\r\n              <div className=\"coinTradePrice\">\r\n                <h1>{coin[0].tradePrice}</h1> KRW\r\n                <p>\r\n                  전일 대비 \r\n                  <font className=\"coinChange\">\r\n                    {coin[0].change === 'RISE' ? '+' : '-'}{(coin[0].changeRate*100).toFixed(2)}%    \r\n                  </font>\r\n                  <font className=\"coinChange\">  \r\n                     {coin[0].change === 'RISE' ? '▲' : '▼'} {coin[0].changePrice}  \r\n                  </font>\r\n                </p>\r\n              </div>\r\n              <ResponsiveLine\r\n                data={series}\r\n                margin={{top:50, right:50, bottom:200, left:100}}\r\n                xScale={{ type: 'point', reverse: true }}\r\n                yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false}}\r\n                yFormat=\" >-.5f\"\r\n                axisTop={null}\r\n                axisRight={null}\r\n                axisBottom={{\r\n                  orient: 'bottom',\r\n                  tickSize: 5,\r\n                  tickValues: 5,\r\n                  tickPadding: 10,\r\n                  tickRotation: 60,\r\n                  legend: '날짜',\r\n                  legendOffset: 75,\r\n                  legendPosition: 'middle'\r\n                }}\r\n                axisLeft={{\r\n                  orient: 'left',\r\n                  tickSize: 5,\r\n                  tickPadding: 5,\r\n                  tickRotation: 0,\r\n                  legend: '거래 가격',\r\n                  legendOffset:-80,\r\n                  legendPosition: 'middle'\r\n                }}\r\n                pointSize={20}\r\n                pointColor={{theme:'background'}}\r\n                pointBorderWidth={2}\r\n                pointBorderColor={{from:'sereColor'}}\r\n                pointLabelYOffset={-12}\r\n                useMesh={true}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"coinConvertingUnit\">\r\n              <h2>코인 종류별 KRW 단위 변환</h2>\r\n\r\n              <div>\r\n                <label htmlFor=\"KRW\">\r\n                  가격(KRW) : \r\n                </label>\r\n                <input \r\n                  id=\"KRW\"\r\n                  type=\"number\"\r\n                  value={inverted ? Math.round(inputNum * (coin[0].tradePrice === undefined ? 0 : coin[0].tradePrice)) : inputNum} \r\n                  onChange={onInputNum}\r\n                  disabled={inverted}\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label htmlFor=\"coin\">\r\n                  수량(개) : \r\n                </label>\r\n                <input \r\n                  id=\"coin\"\r\n                  type=\"number\"\r\n                  value={inverted ? inputNum : Math.round(inputNum / (coin[0].tradePrice === undefined ? 0 : coin[0].tradePrice))} \r\n                  onChange={onInputNum}\r\n                  disabled={!inverted}\r\n                />\r\n              </div>\r\n              \r\n              <button onClick={onInverted}>단위 전환</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}